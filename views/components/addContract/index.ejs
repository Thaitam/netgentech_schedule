<section class="fullcontract">
  <div class="title_fullcontract flex justify-center text-center">
    <h1 class="text-9xl text-center">Thêm hợp đồng</h1>
  </div>
</section>
<section class="px-5 py-3 m-5 border rounded-md space-y-3">
  <div class="flex items-center border-b pb-3">
    <h2 class="text-base">Loại hợp đồng:</h2>
    <div id="contractType" class="flex ml-3">
      <div class="mr-2">
        <input type="radio" id="singlePayment" name="contractType" value="1">
        <label for="singlePayment">Trả một lần</label><br>
      </div>
      <div>
        <input type="radio" id="multiplePayments" name="contractType" value="2">
        <label for="multiplePayments">Trả góp</label>
      </div>
    </div>
  </div>
  <div class="flex justify-between border-b-2 pb-2" style="padding-right: 10rem;">
    <div class="flex items-center">
      <label for="propertyId" style="width: 15rem;">Mã bất động sản: </label>
      <select id="propertyId" class="w-full border"></select>
    </div>
  </div>
  <div class="flex justify-between border-b-2 pb-2" style="padding-right: 10rem;">
    <div>
      <label for="customerName">Tên khách hàng: </label>
      <input placeholder="Lê Trần Thái Tem" type="text" id="customerName" required>
    </div>
    <div>
      <label for="birthYear">Năm sinh: </label>
      <input placeholder="2003" type="number" id="birthYear" pattern="[0-9]{4}" title="Four digit year" required>
    </div>
    <div class="flex flex-col">
      <div>
        <label for="ssn">Số CCCD/CMND: </label>
        <input placeholder="Chấp nhận 9 số và 12 số" type="number" id="ssn" required>
      </div>
      <span id="ssnError" style="color: red;"></span>
    </div>
  </div>
  <div class="flex justify-start items-start border-b-2 pb-2" style="padding-right: 10rem;">
    <label>Địa chỉ: </label>
    <textarea class="border px-2 ml-2" id="address" rows="2" cols="80"></textarea>
  </div>
  <div class="flex justify-between border-b-2 pb-2" style="padding-right: 10rem;">
    <div>
      <div>
        <label>Số điện thoại: </label>
        <input type="number" id="phoneNumber" required>
      </div>
      <span id="mobileError" style="color: red;"></span>
    </div>
    <div>
      <label>Ngày lập hợp đồng: </label>
      <input type="date" id="contractDate">
    </div>
  </div>
  <div class="flex justify-between border-b-2 pb-2" style="padding-right: 10rem;">
    <div>
      <label>Giá trị hợp đồng: </label>
      <input type="number" id="contractValue" readonly>
    </div>
    <div>
      <label>Số tiền đã cọc: </label>
      <input type="number" id="deposit" readonly>
    </div>
  </div>
  <div class="flex justify-between items-center border-b-2 pb-2" style="padding-right: 10rem;">
    <div>
      <label>Số tiền còn lại: </label>
      <input type="number" id="remainingAmount" readonly>
    </div>
    <div>
      <label>Trạng thái: </label>
      <select class="border" name="status" id="status">
        <option value="" disabled selected>Chọn trạng thái</option>
        <option value="1">Đã thanh toán</option>
        <option value="0">Chưa thanh toán</option>
      </select>
    </div>
  </div>
</section>
<section class="h-16 flex justify-end items-center mr-20">
  <button type="button" class="cancel-btn px-5 py-1 border rounded-md">
    Hủy
  </button>
  <button type="button" class="add-btn px-4 py-1 border ml-3 rounded-md bg-blue-500 hover:bg-blue-700">
    Thêm
  </button>
</section>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
  window.onload = function() {

    axios.get('/api/property/getall')
      .then(response => {
        const properties = response.data;
        console.log(properties)
        const selectElement = document.querySelector('#propertyId');
        properties.forEach(property => {
          const optionElement = document.createElement('option');
          optionElement.value = property.ID;
          optionElement.textContent = property.Property_Code;
          selectElement.appendChild(optionElement);
        });
      })
      .catch(error => console.error('Error fetching data:', error));
  }


  document.querySelector('#propertyId').addEventListener('change', function() {
    const selectedPropertyId = this.value; 
    axios.get(`/api/property/getbyid/${selectedPropertyId}`)
      .then(response => {
        const property = response.data;
        const contractValueElement = document.querySelector('#contractValue');
        const depositElement = document.querySelector('#deposit');
        const remainingAmountElement = document.querySelector('#remainingAmount');
        const depositCalcu = property.Price * 0.1
        console.log(depositCalcu)
        contractValueElement.value = property.Price;
        depositElement.value = depositCalcu;
        remainingAmountElement.value = property.Price - depositElement.value;
      })
      .catch(error => console.error('Error fetching data:', error));
  });

  document.querySelector('.add-btn').addEventListener('click', function() {
    const Customer_Name = document.querySelector('#customerName').value;
    const Year_Of_Birth = document.querySelector('#birthYear').value;
    const SSN = document.querySelector('#ssn').value;
    const Customer_Address = document.querySelector('#address').value;
    const Mobile = document.querySelector('#phoneNumber').value;
    const Property_ID = document.querySelector('#propertyId').value;
    const Date_Of_Contract = document.querySelector('#contractDate').value
    const Price = document.querySelector('#contractValue').value;
    const Deposit = document.querySelector('#deposit').value;
    const Remain = document.querySelector('#remainingAmount').value;
    const Status = document.querySelector('#status').value;
    var contractDate = document.getElementById("contractDate").value;
    
    if (!Customer_Name) {
      alert('Vui lòng điền thông tin vào Tên khách hàng');
      return;
    }
  
    if (!SSN || (SSN.length !== 9 && SSN.length !== 12)) {
      document.querySelector('#ssnError').textContent = 'Số CCCD/CMND không hợp lệ';
      return;
    } else {
      document.querySelector('#ssnError').textContent = '';
    }
    const mobileErrorElement = document.querySelector('#mobileError');
    const phonePattern = /(03|07|08|09|01[2|6|8|9])+([0-9]{8})\b/;
    if (!Mobile || !phonePattern.test(Mobile)) {
      mobileErrorElement.textContent = 'Vui lòng nhập số điện thoại hợp lệ';
      return;
    } else {
      mobileErrorElement.textContent = '';
    }
  
    if (!Status) {
      alert('Vui lòng chọn trạng thái');
      return;
    }

    axios.post('/api/fullcontract/add', {
      Customer_Name,
      Year_Of_Birth,
      SSN,
      Customer_Address,
      Mobile,
      Property_ID,
      Date_Of_Contract,
      Price,
      Deposit,
      Remain,
      Status
    })
    .then(response => {
      alert('Thêm hợp đồng thành công');
      window.location.href = '/full-contract'; // replace with your actual list page URL
    })
    .catch(error => {
      alert(`Không thể tạo hợp đồng do bất động sản đã có hợp đồng`);
      return
    });
  });

  document.querySelector('.cancel-btn').addEventListener('click', function() {
    window.location.href = '/full-contract'; // replace with your actual list page URL
  });
  </script>